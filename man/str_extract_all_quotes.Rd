% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yingtools2.R
\name{str_extract_all_quotes}
\alias{str_extract_all_quotes}
\title{Extract any text within quotes.}
\usage{
str_extract_all_quotes(text, convert.text.quotes = TRUE)
}
\arguments{
\item{text}{character vector with quotes to be extracted.}

\item{convert.text.quotes}{logical indicating whether or not to convert \\\" to \" after converting.}
}
\description{
Works like \code{str_extract_all}, but is used to extract quoted text within text. This comes for example text a character string contains code itself, like a python list.
}
\details{
This is more difficult than you might think. \code{str_extract_all(text,middle.pattern("\"",".*","\""))}
doesn't work because (1) it includes stuff on either side of the quote, and (2) it will fail if there are quotes inside the text (which look like \code{\\\"})within the quoted text.
So you need to extract based on \code{\"} but ignore \code{\\\"}, and only extract stuff between pairs of quotes.
}
\author{
Ying Taur
}

